openapi: 3.0.0
info:
  title: Mi ecommerce
  version: 1.0.0
  description: |-
    Esta es la API de Mi ecommerce.
    
    Links:
    - [Repositorio de Github](https://github.com/ton0001/grupo2sprint1)
  
servers:
  - url: http://localhost:8080/api/v2
    description: Entorno Desarrollo
    
tags:
  - name: login
    description: Todos los endpoints de login
  - name: usuarios
    description: Todos los endpoints de usuarios
  - name: productos
    description: Todos los endpoints de productos
  - name: imagenes
    description: Todos los endpoints de productos
  - name: carritos
    description: Todos los endpoints de productos

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  
paths:
  /login:
    post:
      tags: 
        - login
      summary: Recibe las credenciales de un user y las valida para generar un Token para dar autorización a las rutas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  username:
                    type: string
                  password: 
                    type: string
      responses:
        '200':    # status code
          description: Authorized
          content:
            application/json:
              schema:  
                  type: object
                  properties:
                    success:
                      type: boolean
                    message:
                      type: string
                    user:
                      type: object
                      properties:
                        id:
                          type: number
                        username:
                          type: string
                    token:
                      type: string
        '400':    # status code
          description: User NOT found
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
        '500':    # status code
          description: Error login
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string 

  /user/login:
    post:
      tags: 
        - usuarios
      summary: Recibe las credenciales de un user y las valida para generar un Token para dar autorización a las rutas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  username:
                    type: string
                  password: 
                    type: string
      responses:
        '200':    # status code
          description: Authorized
          content:
            application/json:
              schema:  
                  type: object
                  properties:
                    success:
                      type: boolean
                    message:
                      type: string
                    user:
                      type: object
                      properties:
                        id:
                          type: number
                        username:
                          type: string
                    token:
                      type: string
        '400':    # status code
          description: User NOT found
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
        '500':    # status code
          description: Error login
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: falase
                  message:
                    type: string 
                     
  /users:
    get:
      tags: 
        - usuarios
      summary: Retorna listado de usuario.
      security:
        - bearerAuth: []
      responses:
        '200':    # status code
          description: Un array de usuarios
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: object
                  properties:
                    id:
                      type: number
                    email:
                      type: string
                    username:
                      type: string
                    firstname:
                      type: string
                    lastname:
                      type: string
                    profilepic:
                      type: string
                    role:
                      type: string 
                    cart: 
                      type: array
                      items:
                        type: object
                        properties:
                          product:
                            type: number
                          quantity:
                            type: number  
        '500':    # status code
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Usuario no autorizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        
    post:
      tags: 
        - usuarios
      summary: Crear un usuario. Debe recibir un body con la info del user a crear.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  email:
                    type: string
                  username:
                    type: string
                  password: 
                    type: string
                  firstname:
                    type: string
                  lastname:
                    type: string
                  profilepic:
                    type: string
                  role:
                    type: string
      responses: 
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  username:
                    type: string
                  firstname:
                    type: string
                  lastname:
                    type: string
                  profilepic:
                    type: string
                  role:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /users/{id}:
    get:
      tags: 
        - usuarios
      summary: Recupera el user con el id solicitado.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Filtrar usuario por id.
          required: true
          explode: true
          schema:
            type: number
      responses:
        '200':    # status code
          description: Responde con la información completa del user con el id buscado.
          content:
            application/json:
              schema: 
                type: object
                properties:
                  id:
                    type: number
                  email:
                    type: string
                  username:
                    type: string
                  firstname:
                    type: string
                  lastname:
                    type: string
                  profilepic:
                    type: string
                  role:
                    type: string
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Error al obtener el usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    put:
      tags: 
        - usuarios
      summary: Actualiza el user identificado con id. Debe recibir un body con la info del user a modificar.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Filtrar usuario por id.
          required: true
          explode: true
          schema:
            type: number
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                  email:
                    type: string
                  username:
                    type: string
                  password: 
                    type: string
                  firstname:
                    type: string
                  lastname:
                    type: string
                  profilepic:
                    type: string
                  role:
                    type: string
      responses:
        '200':    # status code
          description: Responde con la info completa del usuario modificado.
          content:
            application/json:
              schema: 
                type: object
                properties:
                  id:
                    type: number
                  email:
                    type: string
                  username:
                    type: string
                  firstname:
                    type: string
                  lastname:
                    type: string
                  profilepic:
                    type: string
                  role:
                    type: string
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Error al obtener el usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      tags: 
        - usuarios
      summary: Elimina un usuario con id.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Eliminar el user identificado con id. 
          required: true
          explode: true
          schema:
            type: number
      responses: 
        '200':
          description: Usuario {id} eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Error al eliminar el usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    
  /products:
    get:
      tags: 
        - productos
      summary: Retorna un listado de todos los productos.
      security:
        - bearerAuth: []
      responses:
        '200':    # status code
          description: Un array de todos los productos.
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: object
                  properties:
                    id:
                      type: number
                    title:
                      type: string
                    price:
                      type: number
                    description:
                      type: string
                    image:
                      type: string
                    gallery:
                      type: array
                      items:
                        type: object
                        properties:
                          picture_id:
                            type: number
                          picture_url:
                            type: string
                    category:
                      type: string
                    mostwanted:
                      type: boolean
                    stock:
                      type: number
        '500':    # status code
          description: Error del servidor al cargar los productos
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    post:
      tags: 
        - productos
      summary: Crea un nuevo producto. Debe recibir un body con la info del producto a crear
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  title:
                    type: string
                  price:
                    type: number
                  description:
                    type: string
                  image:
                    type: string
                  gallery:
                    type: array
                    items:
                      type: object
                      properties:
                        picture_id:
                          type: number
                        picture_url:
                          type: string
                  category:
                    type: string
                  mostwanted:
                    type: boolean
                    default: false
                  stock:
                    type: number
                    default: 0
      responses:
        '200':    # status code
          description: Producto creado.
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: object
                  properties:
                    id:
                      type: number
                    title:
                      type: string
                    price:
                      type: number
                    description:
                      type: string
                    image:
                      type: string
                    gallery:
                      type: array
                      items:
                        type: object
                        properties:
                          picture_id:
                            type: number
                          picture_url:
                            type: string
                    category:
                      type: string
                    mostwanted:
                      type: boolean
                    stock:
                      type: number
        '400':    # status code
          description: Faltan datos para crear el producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':    # status code
          description: Error del servidor al crear el producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /products/{id}:
    get:
      tags: 
        - productos
      summary: Recupera el product con el id solicitado. 
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Filtra el producto por el id otorgado. 
        required: true
        explode: true
        schema:
          type: number
      responses:
        '200':    # status code
          description: Retorna el producto.
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: object
                  properties:
                    id:
                      type: number
                    title:
                      type: string
                    price:
                      type: number
                    description:
                      type: string
                    image:
                      type: string
                    gallery:
                      type: array
                      items:
                        type: object
                        properties:
                          picture_id:
                            type: number
                          picture_url:
                            type: string
                    category:
                      type: string
                    mostwanted:
                      type: boolean
                    stock:
                      type: number
        '404':    # status code
          description: El producto no existe.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
        '500':    # status code
          description: Error del servidor al cargar el producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
    put:
      tags: 
        - productos
      summary: Actualiza el product identificado con id. Debe recibir un body con la info del producto a modificar.
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Filtra el producto por el id otorgado. 
        required: true
        explode: true
        schema:
          type: number
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                  title:
                    type: string
                  price:
                    type: number
                  description:
                    type: string
                  image:
                    type: string
                  gallery:
                    type: array
                    items:
                      type: object
                      properties:
                        picture_id:
                          type: number
                        picture_url:
                          type: string
                  category:
                    type: string
                  mostwanted:
                    type: boolean
                    default: false
                  stock:
                    type: number
                    default: 0
      responses:
        '200':    # status code
          description: Retorna el producto modificado.
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: object
                  properties:
                    id:
                      type: number
                    title:
                      type: string
                    price:
                      type: number
                    description:
                      type: string
                    image:
                      type: string
                    gallery:
                      type: array
                      items:
                        type: object
                        properties:
                          picture_id:
                            type: number
                          picture_url:
                            type: string
                    category:
                      type: string
                    mostwanted:
                      type: boolean
                    stock:
                      type: number
        '404':    # status code
          description: El producto no existe.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
        '500':    # status code
          description: Error del servidor al modificar el producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
    delete:
      tags: 
        - productos
      summary: Elimina el product identificado con id. 
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Filtra el producto por el id otorgado. 
        required: true
        explode: true
        schema:
          type: number
      responses:
        '200':    # status code
          description: Producto eliminado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
        '401':    # status code
          description: Usuario no autorizado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
        '404':    # status code
          description: El producto no existe.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
        '500':    # status code
          description: Error del servidor al eliminar el producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
  
  /products/search{q}:
    get:
      tags: 
        - productos
      summary: Recupera una lista de products que contienen una keyword en alguno de sus atributos.
      security:
        - bearerAuth: []
      parameters:
      - name: q
        in: query
        description: Palabra clave para busqueda. 
        required: true
        explode: true
        schema:
          type: string
      responses:
        '200':    # status code
          description: Retorna un array de los producto.
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: object
                  properties:
                    id:
                      type: number
                    title:
                      type: string
                    price:
                      type: number
                    description:
                      type: string
                    image:
                      type: string
                    gallery:
                      type: array
                      items:
                        type: object
                        properties:
                          picture_id:
                            type: number
                          picture_url:
                            type: string
                    category:
                      type: string
                    mostwanted:
                      type: boolean
                    stock:
                      type: number
        '404':    # status code
          description: No se encontraron productos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
        '500':    # status code
          description: Error al obtener los productos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string

  /products/mostwanted:
    get:
      tags: 
        - productos
      summary:  Recupera una lista de products que tienen el atributo mostwanted establecido en true.
      security:
        - bearerAuth: []
      responses:
        '200':    # status code
          description: Retorna array con los productos.
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: object
                  properties:
                    id:
                      type: number
                    title:
                      type: string
                    price:
                      type: number
                    description:
                      type: string
                    image:
                      type: string
                    gallery:
                      type: array
                      items:
                        type: object
                        properties:
                          picture_id:
                            type: number
                          picture_url:
                            type: string
                    category:
                      type: string
                    mostwanted:
                      type: boolean
                    stock:
                      type: number
        '500':    # status code
          description: Error al obtener los productos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string  

  /products{category}:
    get:
      tags: 
        - productos
      summary: Recupera una lista de products que tienen el atributo category establecido en ID.
      security:
        - bearerAuth: []
      parameters:
      - name: category
        in: query
        description: Palabra especifica de la categoria a buscar. 
        required: true
        explode: true
        schema:
          type: string
      responses:
        '200':    # status code
          description: Retorna array con los productos.
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: object
                  properties:
                    id:
                      type: number
                    title:
                      type: string
                    price:
                      type: number
                    description:
                      type: string
                    image:
                      type: string
                    gallery:
                      type: array
                      items:
                        type: object
                        properties:
                          picture_id:
                            type: number
                          picture_url:
                            type: string
                    category:
                      type: string
                    mostwanted:
                      type: boolean
                    stock:
                      type: number
        '404':    # status code
          description: Productos no encontrados
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string  
        '500':    # status code
          description: Error al obtener los productos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string

  /picture:
    post:
      tags: 
        - imagenes
      summary:  Crea una nueva picture. Debe recibir un body con la info de la picture a crear.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
              schema: 
                type: object
                properties:
                  url:
                    type: string
                  description:
                    type: string
                  productId:
                    type: number
      responses:
        '200':    # status code
          description: Retorna la picture creada.
          content:
            application/json:
              schema: 
                type: object
                properties:
                  id:
                    type: number
                  url:
                    type: string
                  description:
                    type: string
                  productId:
                    type: number
        '500':    # status code
          description: Error al crear la imagen.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string  

  /picture{product}:
    get:
      tags: 
        - imagenes
      summary: Recupera la lista de imgenes del producto identificado con id.
      security:
        - bearerAuth: []
      parameters:
      - name: product
        in: query
        description: Id del producto a buscar las imagenes. 
        required: true
        explode: true
        schema:
          type: number
      responses:
        '200':    # status code
          description: Retorna array con las imagenes del producto.
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: object
                  properties:
                    id:
                      type: number
                    url:
                      type: string
                    description:
                      type: string
                    productId:
                      type: number
        '500':    # status code
          description: Error al obtener las imagenes.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string  
  
  /product/{id}/picture:
    get:
      tags: 
        - productos
      summary: Recupera la lista de pictures del product identificado con id.
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Id del producto a buscar las picture. 
        required: true
        explode: true
        schema:
          type: number
      responses:
        '200':    # status code
          description: Retorna array con las picture.
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: object
                  properties:
                    id:
                      type: number
                    url:
                      type: string
                    description:
                      type: string
                    productId:
                      type: number
        '404':    # status code
          description: No existe producto con ese id.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
        '500':    # status code
          description: Error al obtener los productos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string

  /picture/{id}:
    get:
      tags: 
        - imagenes
      summary: Recupera la imagen con el id solicitado.
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Id de la imagen a buscar. 
        required: true
        explode: true
        schema:
          type: number
      responses:
        '200':    # status code
          description: Retorna la imagen.
          content:
            application/json:
              schema: 
                type: object
                properties:
                  id:
                    type: number
                  url:
                    type: string
                  description:
                    type: string
                  productId:
                    type: number
        '404':    # status code
          description: Imagen no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
        '500':    # status code
          description: Error al obtener la imagen.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string 
    
    put:
      tags: 
        - imagenes
      summary: Actualiza la imagen identificada con id. Debe recibir un body con la info de la picture a modificar.
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Id de la imagen a buscar. 
        required: true
        explode: true
        schema:
          type: number
      requestBody:
        required: true
        content:
          application/json:
              schema: 
                type: object
                properties:
                  id:
                    type: number
                  url:
                    type: string
                  description:
                    type: string
                  productId:
                    type: number
      responses:
        '200':    # status code
          description: Retorna imagen modificada.
          content:
            application/json:
              schema: 
                type: object
                properties:
                  id:
                    type: number
                  url:
                    type: string
                  description:
                    type: string
                  productId:
                    type: number
        '400':    # status code
          description: Llamada erronea.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
        '404':    # status code
          description: Imagen no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
        '500':    # status code
          description: Error al editar la imagen.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string 

    delete:
      tags: 
        - imagenes
      summary: Elimina la imagen con el id solicitado.
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Id de la imagen a buscar. 
        required: true
        explode: true
        schema:
          type: number
      responses:
        '200':    # status code
          description: Imagen eliminada con exito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  message:
                    type: string
        '404':    # status code
          description: Imagen no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
        '500':    # status code
          description: Error al eliminar a imagen.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string 

  /cart/{id}:
    get:
      tags: 
        - carritos
      summary: Recupera el carrito del usuario identificado con id.
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Id del usuario a buscar. 
        required: true
        explode: true
        schema:
          type: number
      responses:
        '200':    # status code
          description: Responde con un array conteniendo los products del usuario solicitado.
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    product:
                      type: number
                    quantity:
                      type: number
        '404':    # status code
          description: Usuario no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
        '500':    # status code
          description: Error al obtener el carrito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string 

    put:
      tags:
        - carritos
      summary: Actualiza el carrito del usuario identificado con id solicitado.
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Id de la usuario a buscar. 
        required: true
        explode: true
        schema:
          type: number
      requestBody:
        required: true
        content:
          application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    product:
                      type: number
                    quantity:
                      type: number
      responses:
        '200':    # status code
          description: Responde con la info completa del cart modificado.
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    product:
                      type: number
                    quantity:
                      type: number
        '404':    # status code
          description: Usuario no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
        '500':    # status code
          description: Error al obtener el carrito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string 

  /users/{id}/cart:
    get:
      tags: 
        - usuarios
      summary: Recupera el cart del user identificado con id.
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Id del usuario a buscar. 
        required: true
        explode: true
        schema:
          type: number
      responses:
        '200':    # status code
          description: Responde con un array conteniendo los products del user solicitado.
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    product:
                      type: number
                    quantity:
                      type: number
        '404':    # status code
          description: Usuario no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
        '500':    # status code
          description: Error al obtener el carrito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
    put:
      tags:
        - usuarios
      summary: Actualiza el cart del user identificado con id solicitado.
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Id de la usuario a buscar. 
        required: true
        explode: true
        schema:
          type: number
      requestBody:
        required: true
        content:
          application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    product:
                      type: number
                    quantity:
                      type: number
      responses:
        '200':    # status code
          description: Responde con la info completa del cart modificado.
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    product:
                      type: number
                    quantity:
                      type: number
        '404':    # status code
          description: Usuario no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string
        '500':    # status code
          description: Error al obtener el carrito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    default: false
                  message:
                    type: string 